📚 Book Recommendation System
A Content-Based Book Recommendation System built using Python, leveraging TF-IDF vectorization and cosine similarity to suggest books similar to a user’s favorite read. This project demonstrates how machine learning and natural language processing can enhance personalized experiences for book lovers.

🔍 Overview
This project focuses on building a recommendation engine that suggests books based on their title and author using a content-based approach. We used TF-IDF vectorization to convert text into numerical vectors and cosine similarity to measure how similar books are to one another.

🛠️ Technologies Used
Python
Pandas, NumPy – Data manipulation
Scikit-learn – TF-IDF and cosine similarity
Plotly – Interactive visualizations

📊 Exploratory Data Analysis (Refer to the /images section for visualizations of the below)-
Distribution of Average Ratings
Top Authors by Number of Books


🧠 How It Works
- Data Preprocessing
- Loaded a dataset of 11,000+ books.
- Cleaned and converted data types (e.g., average ratings).
- Feature Engineering
- Combined title and authors into a single text feature (book_content).
- TF-IDF Vectorization
- Transformed the text into numeric form using TfidfVectorizer.
- Similarity Calculation
- Calculated pairwise cosine similarity between books.
- Recommendation Function

Built a function recommend_books() that:
Finds books similar to the given title.
Returns the top 10 most similar ones based on cosine similarity.

💡 Sample Output
Input: Dubliners: Text Criticism and Notes
Top Recommendations:
1. The Long-Lost Map (Ulysses Moore #2)  
2. Things Pondered: From the Heart of a Lesser Woman  
3. Bruno's Dream  
4. The Door Into Summer  
5. A Door of Hope  
6. James Joyce's Ulysses  
7. The Door in the Hedge  
8. Ulysses Found  
9. One Door Away from Heaven  
10. Ulysses  

🚀 How to Use
Clone the repository:
git clone https://github.com/yourusername/book-recommendation-system.git
cd book-recommendation-system

Install dependencies:
pip install -r requirements.txt

Run the script:
python book_recommender.py

🔮 Future Improvements
Incorporate collaborative filtering for user-personalized recommendations.
Add book descriptions, genres, and ratings for hybrid modeling.
Deploy the model via a web interface using Flask or Streamlit.
